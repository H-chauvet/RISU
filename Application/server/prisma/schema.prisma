// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
	provider = "prisma-client-js"
	binaryTargets = ["native"]
}

generator docs {
	provider = "node node_modules/prisma-docs-generator"
	output   = "../docs/prisma"
}

datasource db {
	provider = "mysql"
	url      = env("DATABASE_URL")
}

model User {
	id					String		@id @unique @default(cuid())
	email				String		@unique
	firstName			String?
	lastName			String?
	password			String
	mailVerification	Boolean		@default(false)
	confirmProcess		String		@default("")
	createdAt			DateTime	@default(now())
	Locations			Location[]
	Notifications		Notifications? @relation(fields: [notificationsId], references: [id])
	notificationsId		String?
}

model Containers {
	id               String           @id @default(cuid())
	createdAt        DateTime      @default(now())
	containerMapping String?
	adress           String?
	city             String?
	price            Float?
	width            Float?
	height           Float?
	designs          String? @db.LongText
	informations     String? @db.LongText
	items				   Items[]
	paid             Boolean       @default(false)
	saveName         String?
}

model Items {
	id					String		@id @unique @default(cuid())
	name				String
	price				Int
	available			Boolean		@default(false)
	container			Containers	@relation(fields: [containerId], references: [id])
	containerId			String
	createdAt			DateTime		@default(now())
	Locations			Location[]
	image       String?
  	description String?
}

model Comments {
	id					String		@id @unique @default(cuid())
	userId				String
	date				DateTime
}

model Opinions {
	id					String		@id @unique @default(cuid())
	userId			String
	date				DateTime
	note        String
	comment     String     @default("")
}

model Contact {
  id                       String                     @id @unique @default(cuid())
  name                     String
  email                    String
  message                  String
  createdAt                DateTime                   @default(now())
}

model Location {
	id					String		@id @unique @default(cuid())
	price				Int
	item				Items		@relation(fields: [itemId], references: [id])
	itemId				String
	user				User		@relation(fields: [userId], references: [id])
	userId				String
	createdAt			DateTime	@default(now())
	duration			Int
}

model Notifications {
	id						String		@id @unique @default(cuid())
	Users					User[]
	favoriteItemsAvailable 	Boolean
	endOfRenting			Boolean
	newsOffersRisu			Boolean
}